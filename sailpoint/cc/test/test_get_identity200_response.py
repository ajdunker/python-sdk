# coding: utf-8

"""
    IdentityNow cc (private) APIs

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest
import datetime

from sailpoint.cc.models.get_identity200_response import GetIdentity200Response  # noqa: E501


class TestGetIdentity200Response(unittest.TestCase):
    """GetIdentity200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetIdentity200Response:
        """Test GetIdentity200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetIdentity200Response`
        """
        model = GetIdentity200Response()  # noqa: E501
        if include_optional:
            return GetIdentity200Response(
                id = '',
                alias = '',
                uid = '',
                name = '',
                display_name = '',
                uuid = '',
                encryption_key = None,
                encryption_check = None,
                status = '',
                pending = True,
                password_reset_since_last_login = True,
                usage_cert_attested = None,
                user_flags = None,
                enabled = True,
                alt_auth_via = '',
                alt_auth_via_integration_data = None,
                kba_answers = 1.337,
                disable_password_reset = True,
                pta_source_id = None,
                supports_password_push = True,
                attributes = None,
                external_id = '',
                role = [
                    None
                    ],
                phone = None,
                email = '',
                personal_email = None,
                employee_number = None,
                risk_score = 1.337,
                feature_flags = None,
                feature = [
                    ''
                    ],
                org_encryption_key = '',
                org_encryption_key_id = '',
                meta = None,
                org = sailpoint.cc.models.get_identity_200_response_org.GetIdentity_200_response_org(
                    name = '', 
                    script_name = '', 
                    mode = '', 
                    num_questions = 1.337, 
                    status = '', 
                    max_registered_users = 1.337, 
                    pod = '', 
                    pwd_reset_personal_phone = True, 
                    pwd_reset_personal_email = True, 
                    pwd_reset_kba = True, 
                    pwd_reset_email = True, 
                    pwd_reset_duo = True, 
                    pwd_reset_phone_mask = True, 
                    auth_error_text = sailpoint.cc.models.auth_error_text.authErrorText(), 
                    strong_auth_kba = True, 
                    strong_auth_personal_phone = True, 
                    strong_auth_personal_email = True, 
                    integrations = [
                        None
                        ], 
                    product_name = '', 
                    kba_req_for_authn = 1.337, 
                    kba_req_answers = 1.337, 
                    lockout_attempt_threshold = 1.337, 
                    lockout_time_minutes = 1.337, 
                    usage_cert_required = True, 
                    admin_strong_auth_required = True, 
                    enable_external_password_change = True, 
                    enable_password_replay = True, 
                    enable_automatic_password_replay = True, 
                    notify_authentication_setting_change = True, 
                    netmasks = sailpoint.cc.models.netmasks.netmasks(), 
                    country_codes = sailpoint.cc.models.country_codes.countryCodes(), 
                    white_list = True, 
                    username_empty_text = sailpoint.cc.models.username_empty_text.usernameEmptyText(), 
                    username_label = sailpoint.cc.models.username_label.usernameLabel(), 
                    enable_automation_generation = True, 
                    email_test_mode = True, 
                    email_test_address = '', 
                    org_type = '', 
                    password_replay_state = '', 
                    system_notification_config = '', 
                    redirect_patterns = '', 
                    max_cluster_debug_hours = '', 
                    brand_name = '', 
                    logo = sailpoint.cc.models.logo.logo(), 
                    email_from_address = sailpoint.cc.models.email_from_address.emailFromAddress(), 
                    standard_logo_url = sailpoint.cc.models.standard_logo_url.standardLogoUrl(), 
                    narrow_logo_url = sailpoint.cc.models.narrow_logo_url.narrowLogoUrl(), 
                    action_button_color = '', 
                    active_link_color = '', 
                    navigation_color = '', ),
                step_up_auth = True,
                bx_install_prompted = True,
                federated_login = True,
                auth = sailpoint.cc.models.get_identity_200_response_auth.GetIdentity_200_response_auth(
                    service = '', 
                    encryption = '', ),
                on_network = True,
                on_trusted_geo = True,
                login_url = ''
            )
        else:
            return GetIdentity200Response(
        )
        """

    def testGetIdentity200Response(self):
        """Test GetIdentity200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
