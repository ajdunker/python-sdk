# coding: utf-8

"""
    IdentityNow cc (private) APIs

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, Dict, Optional
from pydantic import BaseModel, Field, StrictStr

class ListApplications200ResponseInnerAccountServicePoliciesInner(BaseModel):
    """
    ListApplications200ResponseInnerAccountServicePoliciesInner
    """
    policy_id: Optional[StrictStr] = Field(None, alias="policyId")
    policy_name: Optional[StrictStr] = Field(None, alias="policyName")
    selectors: Optional[Dict[str, Any]] = None
    __properties = ["policyId", "policyName", "selectors"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ListApplications200ResponseInnerAccountServicePoliciesInner:
        """Create an instance of ListApplications200ResponseInnerAccountServicePoliciesInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ListApplications200ResponseInnerAccountServicePoliciesInner:
        """Create an instance of ListApplications200ResponseInnerAccountServicePoliciesInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ListApplications200ResponseInnerAccountServicePoliciesInner.parse_obj(obj)

        _obj = ListApplications200ResponseInnerAccountServicePoliciesInner.parse_obj({
            "policy_id": obj.get("policyId"),
            "policy_name": obj.get("policyName"),
            "selectors": obj.get("selectors")
        })
        return _obj


