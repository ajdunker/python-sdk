- path: /discovered-applications
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/application-discovery#get-discovered-applications
      source: |
        from sailpoint.v3.api.application_discovery_api import ApplicationDiscoveryApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.get_discovered_applications200_response_inner import GetDiscoveredApplications200ResponseInner
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          detail = 'FULL' # str | Determines whether slim, or increased level of detail is provided for each discovered application in the returned list. SLIM is the default behavior. (optional) # str | Determines whether slim, or increased level of detail is provided for each discovered application in the returned list. SLIM is the default behavior. (optional)
          filter = 'name eq \"Okta\" and description co \"Okta\" and discoverySource in (\"csv\", \"Okta Saas\")' # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)       Filtering is supported for the following fields and operators:  **name**: *eq, sw, co*  **description**: *eq, sw, co*  **createdAtStart**: *eq, le, ge*  **createdAtEnd**: *eq, le, ge*  **discoveredAtStart**: *eq, le, ge*  **discoveredAtEnd**: *eq, le, ge*  **discoverySource**: *eq, in*  (optional) # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)       Filtering is supported for the following fields and operators:  **name**: *eq, sw, co*  **description**: *eq, sw, co*  **createdAtStart**: *eq, le, ge*  **createdAtEnd**: *eq, le, ge*  **discoveredAtStart**: *eq, le, ge*  **discoveredAtEnd**: *eq, le, ge*  **discoverySource**: *eq, in*  (optional)
          sorters = 'name' # str | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, discoveredAt, discoverySource** (optional) # str | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, discoveredAt, discoverySource** (optional)
          try:
              # Get Discovered Applications for Tenant
              
              results = ApplicationDiscoveryApi(api_client).get_discovered_applications()
              # Below is a request that includes all optional parameters
              # results = ApplicationDiscoveryApi(api_client).get_discovered_applications(limit, offset, detail, filter, sorters)
              print("The response of ApplicationDiscoveryApi->get_discovered_applications:\n")
              for item in results:
                  print(item.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ApplicationDiscoveryApi->get_discovered_applications: %s\n" % e)
- path: /manual-discover-applications-template
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/application-discovery#get-manual-discover-applications-csv-template
      source: |
        from sailpoint.v3.api.application_discovery_api import ApplicationDiscoveryApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.manual_discover_applications_template import ManualDiscoverApplicationsTemplate
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          try:
              # Download CSV Template for Discovery
              
              results = ApplicationDiscoveryApi(api_client).get_manual_discover_applications_csv_template()
              # Below is a request that includes all optional parameters
              # results = ApplicationDiscoveryApi(api_client).get_manual_discover_applications_csv_template()
              print("The response of ApplicationDiscoveryApi->get_manual_discover_applications_csv_template:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ApplicationDiscoveryApi->get_manual_discover_applications_csv_template: %s\n" % e)
- path: /manual-discover-applications
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/application-discovery#send-manual-discover-applications-csv-template
      source: |
        from sailpoint.v3.api.application_discovery_api import ApplicationDiscoveryApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          file = None # bytearray | The CSV file to upload containing `application_name` and `description` columns. Each row represents an application to be discovered. # bytearray | The CSV file to upload containing `application_name` and `description` columns. Each row represents an application to be discovered.
          try:
              # Upload CSV to Discover Applications
              
              ApplicationDiscoveryApi(api_client).send_manual_discover_applications_csv_template(file=file)
              # Below is a request that includes all optional parameters
              # ApplicationDiscoveryApi(api_client).send_manual_discover_applications_csv_template(file)
          except Exception as e:
              print("Exception when calling ApplicationDiscoveryApi->send_manual_discover_applications_csv_template: %s\n" % e)
