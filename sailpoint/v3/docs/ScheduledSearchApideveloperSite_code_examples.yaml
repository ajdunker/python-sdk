- path: /scheduled-searches
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/scheduled-search#create-scheduled-search
      source: |
        from sailpoint.v3.api.scheduled_search_api import ScheduledSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.create_scheduled_search_request import CreateScheduledSearchRequest
        from sailpoint.v3.models.scheduled_search import ScheduledSearch
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        create_scheduled_search_request = '''{savedSearchId=9c620e13-cd33-4804-a13d-403bd7bcdbad, schedule={type=DAILY, hours={type=LIST, values=[9]}}, recipients=[{type=IDENTITY, id=2c9180867624cbd7017642d8c8c81f67}]}''' # CreateScheduledSearchRequest | The scheduled search to persist.
        try:
            # Create a new scheduled search
            new_create_scheduled_search_request = CreateScheduledSearchRequest.from_json(create_scheduled_search_request)
            results = ScheduledSearchApi(api_client).create_scheduled_search(create_scheduled_search_request=new_create_scheduled_search_request)
            # Below is a request that includes all optional parameters
            # results = ScheduledSearchApi(api_client).create_scheduled_search(new_create_scheduled_search_request)
            print("The response of ScheduledSearchApi->create_scheduled_search:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling ScheduledSearchApi->create_scheduled_search: %s\n" % e)
- path: /scheduled-searches/{id}
  method: DELETE
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/scheduled-search#delete-scheduled-search
      source: |
        from sailpoint.v3.api.scheduled_search_api import ScheduledSearchApi
        from sailpoint.v3.api_client import ApiClient
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = '2c91808568c529c60168cca6f90c1313' # str | ID of the requested document. # str | ID of the requested document.
        try:
            # Delete a Scheduled Search
            
            ScheduledSearchApi(api_client).delete_scheduled_search(id=id)
            # Below is a request that includes all optional parameters
            # ScheduledSearchApi(api_client).delete_scheduled_search(id)
        except Exception as e:
            print("Exception when calling ScheduledSearchApi->delete_scheduled_search: %s\n" % e)
- path: /scheduled-searches/{id}
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/scheduled-search#get-scheduled-search
      source: |
        from sailpoint.v3.api.scheduled_search_api import ScheduledSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.scheduled_search import ScheduledSearch
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = '2c91808568c529c60168cca6f90c1313' # str | ID of the requested document. # str | ID of the requested document.
        try:
            # Get a Scheduled Search
            
            results = ScheduledSearchApi(api_client).get_scheduled_search(id=id)
            # Below is a request that includes all optional parameters
            # results = ScheduledSearchApi(api_client).get_scheduled_search(id)
            print("The response of ScheduledSearchApi->get_scheduled_search:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling ScheduledSearchApi->get_scheduled_search: %s\n" % e)
- path: /scheduled-searches
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/scheduled-search#list-scheduled-search
      source: |
        from sailpoint.v3.api.scheduled_search_api import ScheduledSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.scheduled_search import ScheduledSearch
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        count = False # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False)
        filters = 'savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"' # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **owner.id**: *eq*  **savedSearchId**: *eq* (optional) # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **owner.id**: *eq*  **savedSearchId**: *eq* (optional)
        try:
            # List scheduled searches
            
            results = ScheduledSearchApi(api_client).list_scheduled_search()
            # Below is a request that includes all optional parameters
            # results = ScheduledSearchApi(api_client).list_scheduled_search(offset, limit, count, filters)
            print("The response of ScheduledSearchApi->list_scheduled_search:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling ScheduledSearchApi->list_scheduled_search: %s\n" % e)
- path: /scheduled-searches/{id}/unsubscribe
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/scheduled-search#unsubscribe-scheduled-search
      source: |
        from sailpoint.v3.api.scheduled_search_api import ScheduledSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.typed_reference import TypedReference
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = '2c91808568c529c60168cca6f90c1313' # str | ID of the requested document. # str | ID of the requested document.
        typed_reference = '''{
          "id" : "2c91808568c529c60168cca6f90c1313",
          "type" : "IDENTITY"
        }''' # TypedReference | The recipient to be removed from the scheduled search. 
        try:
            # Unsubscribe a recipient from Scheduled Search
            new_typed_reference = TypedReference.from_json(typed_reference)
            ScheduledSearchApi(api_client).unsubscribe_scheduled_search(id=id, typed_reference=new_typed_reference)
            # Below is a request that includes all optional parameters
            # ScheduledSearchApi(api_client).unsubscribe_scheduled_search(id, new_typed_reference)
        except Exception as e:
            print("Exception when calling ScheduledSearchApi->unsubscribe_scheduled_search: %s\n" % e)
- path: /scheduled-searches/{id}
  method: PUT
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/scheduled-search#update-scheduled-search
      source: |
        from sailpoint.v3.api.scheduled_search_api import ScheduledSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.scheduled_search import ScheduledSearch
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = '2c91808568c529c60168cca6f90c1313' # str | ID of the requested document. # str | ID of the requested document.
        scheduled_search = '''{
          "owner" : {
            "id" : "2c9180867624cbd7017642d8c8c81f67",
            "type" : "IDENTITY"
          },
          "displayQueryDetails" : false,
          "created" : "",
          "description" : "Daily disabled accounts",
          "ownerId" : "2c9180867624cbd7017642d8c8c81f67",
          "enabled" : false,
          "schedule" : {
            "hours" : {
              "values" : [ "MON", "WED" ],
              "interval" : 3,
              "type" : "LIST"
            },
            "months" : {
              "values" : [ "MON", "WED" ],
              "interval" : 3,
              "type" : "LIST"
            },
            "timeZoneId" : "America/Chicago",
            "days" : {
              "values" : [ "MON", "WED" ],
              "interval" : 3,
              "type" : "LIST"
            },
            "expiration" : "2018-06-25T20:22:28.104Z",
            "type" : "WEEKLY"
          },
          "recipients" : [ {
            "id" : "2c9180867624cbd7017642d8c8c81f67",
            "type" : "IDENTITY"
          }, {
            "id" : "2c9180867624cbd7017642d8c8c81f67",
            "type" : "IDENTITY"
          } ],
          "savedSearchId" : "554f1511-f0a1-4744-ab14-599514d3e57c",
          "name" : "Daily disabled accounts",
          "modified" : "",
          "id" : "0de46054-fe90-434a-b84e-c6b3359d0c64",
          "emailEmptyResults" : false
        }''' # ScheduledSearch | The scheduled search to persist.
        try:
            # Update an existing Scheduled Search
            new_scheduled_search = ScheduledSearch.from_json(scheduled_search)
            results = ScheduledSearchApi(api_client).update_scheduled_search(id=id, scheduled_search=new_scheduled_search)
            # Below is a request that includes all optional parameters
            # results = ScheduledSearchApi(api_client).update_scheduled_search(id, new_scheduled_search)
            print("The response of ScheduledSearchApi->update_scheduled_search:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling ScheduledSearchApi->update_scheduled_search: %s\n" % e)
