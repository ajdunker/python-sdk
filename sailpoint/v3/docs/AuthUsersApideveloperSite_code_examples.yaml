- path: /auth-users/{id}
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/auth-users#get-auth-user
      source: |
        from sailpoint.v3.api.auth_users_api import AuthUsersApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.auth_user import AuthUser
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'ef38f94347e94562b5bb8424a56397d8' # str | Identity ID # str | Identity ID
        try:
            # Auth User Details
            
            results = AuthUsersApi(api_client).get_auth_user(id=id)
            # Below is a request that includes all optional parameters
            # results = AuthUsersApi(api_client).get_auth_user(id)
            print("The response of AuthUsersApi->get_auth_user:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling AuthUsersApi->get_auth_user: %s\n" % e)
- path: /auth-users/{id}
  method: PATCH
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/auth-users#patch-auth-user
      source: |
        from sailpoint.v3.api.auth_users_api import AuthUsersApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.auth_user import AuthUser
        from sailpoint.v3.models.json_patch_operation import JsonPatchOperation
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'ef38f94347e94562b5bb8424a56397d8' # str | Identity ID # str | Identity ID
        json_patch_operation = '''[{op=replace, path=/capabilities, value=[ORG_ADMIN]}]''' # List[JsonPatchOperation] | A list of auth user update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
        try:
            # Auth User Update
            new_json_patch_operation = JsonPatchOperation.from_json(json_patch_operation)
            results = AuthUsersApi(api_client).patch_auth_user(id=id, json_patch_operation=new_json_patch_operation)
            # Below is a request that includes all optional parameters
            # results = AuthUsersApi(api_client).patch_auth_user(id, new_json_patch_operation)
            print("The response of AuthUsersApi->patch_auth_user:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling AuthUsersApi->patch_auth_user: %s\n" % e)
