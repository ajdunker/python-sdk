- path: /connectors
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#create-custom-connector
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.v3_connector_dto import V3ConnectorDto
        from sailpoint.v3.models.v3_create_connector_dto import V3CreateConnectorDto
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          v3_create_connector_dto = '''{
          "name" : "custom connector",
          "directConnect" : true,
          "className" : "sailpoint.connector.OpenConnectorAdapter",
          "type" : "custom connector type",
          "status" : "RELEASED"
        }''' # V3CreateConnectorDto | 
          try:
              # Create Custom Connector
              new_v3_create_connector_dto = V3CreateConnectorDto.from_json(v3_create_connector_dto)
              results = ConnectorsApi(api_client).create_custom_connector(v3_create_connector_dto=new_v3_create_connector_dto)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).create_custom_connector(new_v3_create_connector_dto)
              print("The response of ConnectorsApi->create_custom_connector:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->create_custom_connector: %s\n" % e)
- path: /connectors/{scriptName}
  method: DELETE
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#delete-custom-connector
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.
          try:
              # Delete Connector by Script Name
              
              ConnectorsApi(api_client).delete_custom_connector(script_name=script_name)
              # Below is a request that includes all optional parameters
              # ConnectorsApi(api_client).delete_custom_connector(script_name)
          except Exception as e:
              print("Exception when calling ConnectorsApi->delete_custom_connector: %s\n" % e)
- path: /connectors/{scriptName}
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#get-connector
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.connector_detail import ConnectorDetail
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.
          locale = 'de' # str | The locale to apply to the config. If no viable locale is given, it will default to \"en\" (optional) # str | The locale to apply to the config. If no viable locale is given, it will default to \"en\" (optional)
          try:
              # Get Connector by Script Name
              
              results = ConnectorsApi(api_client).get_connector(script_name=script_name)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).get_connector(script_name, locale)
              print("The response of ConnectorsApi->get_connector:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->get_connector: %s\n" % e)
- path: /connectors
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#get-connector-list
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.v3_connector_dto import V3ConnectorDto
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          filters = 'directConnect eq \"true\"' # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw, co*  **type**: *sw, co, eq*  **directConnect**: *eq*  **category**: *eq*  **features**: *ca*  **labels**: *ca* (optional) # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw, co*  **type**: *sw, co, eq*  **directConnect**: *eq*  **category**: *eq*  **features**: *ca*  **labels**: *ca* (optional)
          limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count = False # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False)
          locale = 'de' # str | The locale to apply to the config. If no viable locale is given, it will default to \"en\" (optional) # str | The locale to apply to the config. If no viable locale is given, it will default to \"en\" (optional)
          try:
              # Get Connector List
              
              results = ConnectorsApi(api_client).get_connector_list()
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).get_connector_list(filters, limit, offset, count, locale)
              print("The response of ConnectorsApi->get_connector_list:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->get_connector_list: %s\n" % e)
- path: /connectors/{scriptName}/source-config
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#get-connector-source-config
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.
          try:
              # Get Connector Source Configuration
              
              results = ConnectorsApi(api_client).get_connector_source_config(script_name=script_name)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).get_connector_source_config(script_name)
              print("The response of ConnectorsApi->get_connector_source_config:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->get_connector_source_config: %s\n" % e)
- path: /connectors/{scriptName}/source-template
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#get-connector-source-template
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.
          try:
              # Get Connector Source Template
              
              results = ConnectorsApi(api_client).get_connector_source_template(script_name=script_name)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).get_connector_source_template(script_name)
              print("The response of ConnectorsApi->get_connector_source_template:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->get_connector_source_template: %s\n" % e)
- path: /connectors/{scriptName}/translations/{locale}
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#get-connector-translations
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. Scriptname is the unique id generated at connector creation. # str | The scriptName value of the connector. Scriptname is the unique id generated at connector creation.
          locale = 'de' # str | The locale to apply to the config. If no viable locale is given, it will default to \"en\" # str | The locale to apply to the config. If no viable locale is given, it will default to \"en\"
          try:
              # Get Connector Translations
              
              results = ConnectorsApi(api_client).get_connector_translations(script_name=script_name, locale=locale)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).get_connector_translations(script_name, locale)
              print("The response of ConnectorsApi->get_connector_translations:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->get_connector_translations: %s\n" % e)
- path: /connectors/{scriptName}/source-config
  method: PUT
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#put-connector-source-config
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.update_detail import UpdateDetail
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.
          file = None # bytearray | connector source config xml file # bytearray | connector source config xml file
          try:
              # Update Connector Source Configuration
              
              results = ConnectorsApi(api_client).put_connector_source_config(script_name=script_name, file=file)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).put_connector_source_config(script_name, file)
              print("The response of ConnectorsApi->put_connector_source_config:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->put_connector_source_config: %s\n" % e)
- path: /connectors/{scriptName}/source-template
  method: PUT
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#put-connector-source-template
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.update_detail import UpdateDetail
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.
          file = None # bytearray | connector source template xml file # bytearray | connector source template xml file
          try:
              # Update Connector Source Template
              
              results = ConnectorsApi(api_client).put_connector_source_template(script_name=script_name, file=file)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).put_connector_source_template(script_name, file)
              print("The response of ConnectorsApi->put_connector_source_template:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->put_connector_source_template: %s\n" % e)
- path: /connectors/{scriptName}/translations/{locale}
  method: PUT
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#put-connector-translations
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.update_detail import UpdateDetail
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. Scriptname is the unique id generated at connector creation. # str | The scriptName value of the connector. Scriptname is the unique id generated at connector creation.
          locale = 'de' # str | The locale to apply to the config. If no viable locale is given, it will default to \"en\" # str | The locale to apply to the config. If no viable locale is given, it will default to \"en\"
          try:
              # Update Connector Translations
              
              results = ConnectorsApi(api_client).put_connector_translations(script_name=script_name, locale=locale)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).put_connector_translations(script_name, locale)
              print("The response of ConnectorsApi->put_connector_translations:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->put_connector_translations: %s\n" % e)
- path: /connectors/{scriptName}
  method: PATCH
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/connectors#update-connector
      source: |
        from sailpoint.v3.api.connectors_api import ConnectorsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.connector_detail import ConnectorDetail
        from sailpoint.v3.models.json_patch_operation import JsonPatchOperation
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          script_name = 'aScriptName' # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # str | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.
          json_patch_operation = '''[sailpoint.v3.JsonPatchOperation()]''' # List[JsonPatchOperation] | A list of connector detail update operations 
          try:
              # Update Connector by Script Name
              new_json_patch_operation = JsonPatchOperation.from_json(json_patch_operation)
              results = ConnectorsApi(api_client).update_connector(script_name=script_name, json_patch_operation=new_json_patch_operation)
              # Below is a request that includes all optional parameters
              # results = ConnectorsApi(api_client).update_connector(script_name, new_json_patch_operation)
              print("The response of ConnectorsApi->update_connector:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling ConnectorsApi->update_connector: %s\n" % e)
