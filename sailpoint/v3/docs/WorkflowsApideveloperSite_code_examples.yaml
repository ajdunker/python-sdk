- path: /workflow-executions/{id}/cancel
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#cancel-workflow-execution
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | The workflow execution ID # str | The workflow execution ID
        try:
            # Cancel Workflow Execution by ID
            
            WorkflowsApi(api_client).cancel_workflow_execution(id=id)
            # Below is a request that includes all optional parameters
            # WorkflowsApi(api_client).cancel_workflow_execution(id)
        except Exception as e:
            print("Exception when calling WorkflowsApi->cancel_workflow_execution: %s\n" % e)
- path: /workflows/execute/external/{id}
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#create-external-execute-workflow
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.create_external_execute_workflow200_response import CreateExternalExecuteWorkflow200Response
        from sailpoint.v3.models.create_external_execute_workflow_request import CreateExternalExecuteWorkflowRequest
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the workflow # str | Id of the workflow
        create_external_execute_workflow_request = '''sailpoint.v3.CreateExternalExecuteWorkflowRequest()''' # CreateExternalExecuteWorkflowRequest |  (optional)
        try:
            # Execute Workflow via External Trigger
            
            results = WorkflowsApi(api_client).create_external_execute_workflow(id=id)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).create_external_execute_workflow(id, new_create_external_execute_workflow_request)
            print("The response of WorkflowsApi->create_external_execute_workflow:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->create_external_execute_workflow: %s\n" % e)
- path: /workflows
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#create-workflow
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.create_workflow_request import CreateWorkflowRequest
        from sailpoint.v3.models.workflow import Workflow
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        create_workflow_request = '''{name=Send Email, owner={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=William Wilson}, description=Send an email to the identity who's attributes changed., definition={start=Send Email Test, steps={Send Email={actionId=sp:send-email, attributes={body=This is a test, from=sailpoint@sailpoint.com, recipientId.$=$.identity.id, subject=test}, nextStep=success, selectResult=null, type=action}, success={type=success}}}, enabled=false, trigger={type=EVENT, attributes={id=idn:identity-attributes-changed, filter=$.changes[?(@.attribute == 'manager')]}}}''' # CreateWorkflowRequest | 
        try:
            # Create Workflow
            new_create_workflow_request = CreateWorkflowRequest.from_json(create_workflow_request)
            results = WorkflowsApi(api_client).create_workflow(create_workflow_request=new_create_workflow_request)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).create_workflow(new_create_workflow_request)
            print("The response of WorkflowsApi->create_workflow:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->create_workflow: %s\n" % e)
- path: /workflows/{id}/external/oauth-clients
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#create-workflow-external-trigger
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow_o_auth_client import WorkflowOAuthClient
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the workflow # str | Id of the workflow
        try:
            # Generate External Trigger OAuth Client
            
            results = WorkflowsApi(api_client).create_workflow_external_trigger(id=id)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).create_workflow_external_trigger(id)
            print("The response of WorkflowsApi->create_workflow_external_trigger:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->create_workflow_external_trigger: %s\n" % e)
- path: /workflows/{id}
  method: DELETE
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#delete-workflow
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the Workflow # str | Id of the Workflow
        try:
            # Delete Workflow By Id
            
            WorkflowsApi(api_client).delete_workflow(id=id)
            # Below is a request that includes all optional parameters
            # WorkflowsApi(api_client).delete_workflow(id)
        except Exception as e:
            print("Exception when calling WorkflowsApi->delete_workflow: %s\n" % e)
- path: /workflows/{id}
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#get-workflow
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow import Workflow
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the workflow # str | Id of the workflow
        try:
            # Get Workflow By Id
            
            results = WorkflowsApi(api_client).get_workflow(id=id)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).get_workflow(id)
            print("The response of WorkflowsApi->get_workflow:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->get_workflow: %s\n" % e)
- path: /workflow-executions/{id}
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#get-workflow-execution
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Workflow execution ID. # str | Workflow execution ID.
        try:
            # Get Workflow Execution
            
            results = WorkflowsApi(api_client).get_workflow_execution(id=id)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).get_workflow_execution(id)
            print("The response of WorkflowsApi->get_workflow_execution:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->get_workflow_execution: %s\n" % e)
- path: /workflow-executions/{id}/history
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#get-workflow-execution-history
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow_execution_event import WorkflowExecutionEvent
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the workflow execution # str | Id of the workflow execution
        try:
            # Get Workflow Execution History
            
            results = WorkflowsApi(api_client).get_workflow_execution_history(id=id)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).get_workflow_execution_history(id)
            print("The response of WorkflowsApi->get_workflow_execution_history:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->get_workflow_execution_history: %s\n" % e)
- path: /workflows/{id}/executions
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#get-workflow-executions
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow_execution import WorkflowExecution
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Workflow ID. # str | Workflow ID.
        limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        count = False # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False)
        filters = 'status eq \"Failed\"' # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **start_time**: *eq, lt, le, gt, ge*  **status**: *eq* (optional) # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **start_time**: *eq, lt, le, gt, ge*  **status**: *eq* (optional)
        try:
            # List Workflow Executions
            
            results = WorkflowsApi(api_client).get_workflow_executions(id=id)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).get_workflow_executions(id, limit, offset, count, filters)
            print("The response of WorkflowsApi->get_workflow_executions:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->get_workflow_executions: %s\n" % e)
- path: /workflow-library
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#list-complete-workflow-library
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.list_complete_workflow_library200_response_inner import ListCompleteWorkflowLibrary200ResponseInner
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        try:
            # List Complete Workflow Library
            
            results = WorkflowsApi(api_client).list_complete_workflow_library()
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).list_complete_workflow_library(limit, offset)
            print("The response of WorkflowsApi->list_complete_workflow_library:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->list_complete_workflow_library: %s\n" % e)
- path: /workflow-library/actions
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#list-workflow-library-actions
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow_library_action import WorkflowLibraryAction
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        filters = 'id eq \"sp:create-campaign\"' # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional) # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional)
        try:
            # List Workflow Library Actions
            
            results = WorkflowsApi(api_client).list_workflow_library_actions()
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).list_workflow_library_actions(limit, offset, filters)
            print("The response of WorkflowsApi->list_workflow_library_actions:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->list_workflow_library_actions: %s\n" % e)
- path: /workflow-library/operators
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#list-workflow-library-operators
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow_library_operator import WorkflowLibraryOperator
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        try:
            # List Workflow Library Operators
            
            results = WorkflowsApi(api_client).list_workflow_library_operators()
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).list_workflow_library_operators()
            print("The response of WorkflowsApi->list_workflow_library_operators:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->list_workflow_library_operators: %s\n" % e)
- path: /workflow-library/triggers
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#list-workflow-library-triggers
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow_library_trigger import WorkflowLibraryTrigger
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        filters = 'id eq \"idn:identity-attributes-changed\"' # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional) # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional)
        try:
            # List Workflow Library Triggers
            
            results = WorkflowsApi(api_client).list_workflow_library_triggers()
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).list_workflow_library_triggers(limit, offset, filters)
            print("The response of WorkflowsApi->list_workflow_library_triggers:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->list_workflow_library_triggers: %s\n" % e)
- path: /workflows
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#list-workflows
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow import Workflow
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        try:
            # List Workflows
            
            results = WorkflowsApi(api_client).list_workflows()
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).list_workflows()
            print("The response of WorkflowsApi->list_workflows:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->list_workflows: %s\n" % e)
- path: /workflows/{id}
  method: PATCH
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#patch-workflow
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.json_patch_operation import JsonPatchOperation
        from sailpoint.v3.models.workflow import Workflow
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the Workflow # str | Id of the Workflow
        json_patch_operation = '''[{op=replace, path=/name, value=Send Email}, {op=replace, path=/owner, value={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=William Wilson}}, {op=replace, path=/description, value=Send an email to the identity who's attributes changed.}, {op=replace, path=/enabled, value=false}, {op=replace, path=/definition, value={start=Send Email Test, steps={Send Email={actionId=sp:send-email, attributes={body=This is a test, from=sailpoint@sailpoint.com, recipientId.$=$.identity.id, subject=test}, nextStep=success, selectResult=null, type=action}, success={type=success}}}}, {op=replace, path=/trigger, value={type=EVENT, attributes={id=idn:identity-attributes-changed}}}]''' # List[JsonPatchOperation] | 
        try:
            # Patch Workflow
            new_json_patch_operation = JsonPatchOperation.from_json(json_patch_operation)
            results = WorkflowsApi(api_client).patch_workflow(id=id, json_patch_operation=new_json_patch_operation)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).patch_workflow(id, new_json_patch_operation)
            print("The response of WorkflowsApi->patch_workflow:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->patch_workflow: %s\n" % e)
- path: /workflows/{id}
  method: PUT
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#put-workflow
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.workflow import Workflow
        from sailpoint.v3.models.workflow_body import WorkflowBody
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the Workflow # str | Id of the Workflow
        workflow_body = '''{
          "owner" : {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "name" : "Send Email",
          "description" : "Send an email to the identity who's attributes changed.",
          "definition" : {
            "start" : "Send Email Test",
            "steps" : {
              "Send Email" : {
                "actionId" : "sp:send-email",
                "attributes" : {
                  "body" : "This is a test",
                  "from" : "sailpoint@sailpoint.com",
                  "recipientId.$" : "$.identity.id",
                  "subject" : "test"
                },
                "nextStep" : "success",
                "type" : "ACTION"
              },
              "success" : {
                "type" : "success"
              }
            }
          },
          "trigger" : {
            "displayName" : "displayName",
            "attributes" : {
              "description" : "Triggered when an identity's manager attribute changes",
              "attributeToFilter" : "LifecycleState",
              "id" : "idn:identity-attributes-changed",
              "filter.$" : "$.changes[?(@.attribute == 'manager')]"
            },
            "type" : "EVENT"
          },
          "enabled" : false
        }''' # WorkflowBody | 
        try:
            # Update Workflow
            new_workflow_body = WorkflowBody.from_json(workflow_body)
            results = WorkflowsApi(api_client).put_workflow(id=id, workflow_body=new_workflow_body)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).put_workflow(id, new_workflow_body)
            print("The response of WorkflowsApi->put_workflow:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->put_workflow: %s\n" % e)
- path: /workflows/execute/external/{id}/test
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#test-external-execute-workflow
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.test_external_execute_workflow200_response import TestExternalExecuteWorkflow200Response
        from sailpoint.v3.models.test_external_execute_workflow_request import TestExternalExecuteWorkflowRequest
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the workflow # str | Id of the workflow
        test_external_execute_workflow_request = '''sailpoint.v3.TestExternalExecuteWorkflowRequest()''' # TestExternalExecuteWorkflowRequest |  (optional)
        try:
            # Test Workflow via External Trigger
            
            results = WorkflowsApi(api_client).test_external_execute_workflow(id=id)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).test_external_execute_workflow(id, new_test_external_execute_workflow_request)
            print("The response of WorkflowsApi->test_external_execute_workflow:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->test_external_execute_workflow: %s\n" % e)
- path: /workflows/{id}/test
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/workflows#test-workflow
      source: |
        from sailpoint.v3.api.workflows_api import WorkflowsApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.test_workflow200_response import TestWorkflow200Response
        from sailpoint.v3.models.test_workflow_request import TestWorkflowRequest
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'c17bea3a-574d-453c-9e04-4365fbf5af0b' # str | Id of the workflow # str | Id of the workflow
        test_workflow_request = '''{input={identity={id=ee769173319b41d19ccec6cea52f237b, name=john.doe, type=IDENTITY}, changes=[{attribute=department, oldValue=sales, newValue=marketing}, {attribute=manager, oldValue={id=ee769173319b41d19ccec6c235423237b, name=nice.guy, type=IDENTITY}, newValue={id=ee769173319b41d19ccec6c235423236c, name=mean.guy, type=IDENTITY}}, {attribute=email, oldValue=john.doe@hotmail.com, newValue=john.doe@gmail.com}]}}''' # TestWorkflowRequest | 
        try:
            # Test Workflow By Id
            new_test_workflow_request = TestWorkflowRequest.from_json(test_workflow_request)
            results = WorkflowsApi(api_client).test_workflow(id=id, test_workflow_request=new_test_workflow_request)
            # Below is a request that includes all optional parameters
            # results = WorkflowsApi(api_client).test_workflow(id, new_test_workflow_request)
            print("The response of WorkflowsApi->test_workflow:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling WorkflowsApi->test_workflow: %s\n" % e)
