- path: /password-policies
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/password-policies#create-password-policy
      source: |
        from sailpoint.v3.api.password_policies_api import PasswordPoliciesApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.password_policy_v3_dto import PasswordPolicyV3Dto
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        password_policy_v3_dto = '''{
          "validateAgainstAccountName" : true,
          "minLength" : 8,
          "description" : "Information about the Password Policy",
          "requireStrongAuthUntrustedGeographies" : true,
          "enablePasswdExpiration" : true,
          "minNumeric" : 8,
          "lastUpdated" : "2000-01-23T04:56:07.000+00:00",
          "validateAgainstAccountId" : false,
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "accountNameMinWordLength" : 6,
          "minUpper" : 8,
          "firstExpirationReminder" : 45,
          "modified" : "modified",
          "id" : "2c91808e7d976f3b017d9f5ceae440c8",
          "requireStrongAuthn" : true,
          "useDictionary" : false,
          "minSpecial" : 8,
          "sourceIds" : [ "2c91808382ffee0b01830de154f14034", "2f98808382ffee0b01830de154f12134" ],
          "passwordExpiration" : 8,
          "maxRepeatedChars" : 3,
          "minCharacterTypes" : 5,
          "minAlpha" : 5,
          "created" : "created",
          "useAccountAttributes" : false,
          "accountIdMinWordLength" : 4,
          "minLower" : 8,
          "useIdentityAttributes" : false,
          "defaultPolicy" : true,
          "requireStrongAuthOffNetwork" : true,
          "name" : "PasswordPolicy Example",
          "maxLength" : 25
        }''' # PasswordPolicyV3Dto | 
        try:
            # Create Password Policy
            new_password_policy_v3_dto = PasswordPolicyV3Dto.from_json(password_policy_v3_dto)
            results = PasswordPoliciesApi(api_client).create_password_policy(password_policy_v3_dto=new_password_policy_v3_dto)
            # Below is a request that includes all optional parameters
            # results = PasswordPoliciesApi(api_client).create_password_policy(new_password_policy_v3_dto)
            print("The response of PasswordPoliciesApi->create_password_policy:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling PasswordPoliciesApi->create_password_policy: %s\n" % e)
- path: /password-policies/{id}
  method: DELETE
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/password-policies#delete-password-policy
      source: |
        from sailpoint.v3.api.password_policies_api import PasswordPoliciesApi
        from sailpoint.v3.api_client import ApiClient
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'ff808081838d9e9d01838da6a03e0002' # str | The ID of password policy to delete. # str | The ID of password policy to delete.
        try:
            # Delete Password Policy by ID
            
            PasswordPoliciesApi(api_client).delete_password_policy(id=id)
            # Below is a request that includes all optional parameters
            # PasswordPoliciesApi(api_client).delete_password_policy(id)
        except Exception as e:
            print("Exception when calling PasswordPoliciesApi->delete_password_policy: %s\n" % e)
- path: /password-policies/{id}
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/password-policies#get-password-policy-by-id
      source: |
        from sailpoint.v3.api.password_policies_api import PasswordPoliciesApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.password_policy_v3_dto import PasswordPolicyV3Dto
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'ff808081838d9e9d01838da6a03e0005' # str | The ID of password policy to retrieve. # str | The ID of password policy to retrieve.
        try:
            # Get Password Policy by ID
            
            results = PasswordPoliciesApi(api_client).get_password_policy_by_id(id=id)
            # Below is a request that includes all optional parameters
            # results = PasswordPoliciesApi(api_client).get_password_policy_by_id(id)
            print("The response of PasswordPoliciesApi->get_password_policy_by_id:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling PasswordPoliciesApi->get_password_policy_by_id: %s\n" % e)
- path: /password-policies
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/password-policies#list-password-policies
      source: |
        from sailpoint.v3.api.password_policies_api import PasswordPoliciesApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.password_policy_v3_dto import PasswordPolicyV3Dto
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        count = False # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False)
        try:
            # List Password Policies
            
            results = PasswordPoliciesApi(api_client).list_password_policies()
            # Below is a request that includes all optional parameters
            # results = PasswordPoliciesApi(api_client).list_password_policies(limit, offset, count)
            print("The response of PasswordPoliciesApi->list_password_policies:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling PasswordPoliciesApi->list_password_policies: %s\n" % e)
- path: /password-policies/{id}
  method: PUT
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/password-policies#set-password-policy
      source: |
        from sailpoint.v3.api.password_policies_api import PasswordPoliciesApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.password_policy_v3_dto import PasswordPolicyV3Dto
        from pprint import pprint
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
        id = 'ff808081838d9e9d01838da6a03e0007' # str | The ID of password policy to update. # str | The ID of password policy to update.
        password_policy_v3_dto = '''{
          "validateAgainstAccountName" : true,
          "minLength" : 8,
          "description" : "Information about the Password Policy",
          "requireStrongAuthUntrustedGeographies" : true,
          "enablePasswdExpiration" : true,
          "minNumeric" : 8,
          "lastUpdated" : "2000-01-23T04:56:07.000+00:00",
          "validateAgainstAccountId" : false,
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "accountNameMinWordLength" : 6,
          "minUpper" : 8,
          "firstExpirationReminder" : 45,
          "modified" : "modified",
          "id" : "2c91808e7d976f3b017d9f5ceae440c8",
          "requireStrongAuthn" : true,
          "useDictionary" : false,
          "minSpecial" : 8,
          "sourceIds" : [ "2c91808382ffee0b01830de154f14034", "2f98808382ffee0b01830de154f12134" ],
          "passwordExpiration" : 8,
          "maxRepeatedChars" : 3,
          "minCharacterTypes" : 5,
          "minAlpha" : 5,
          "created" : "created",
          "useAccountAttributes" : false,
          "accountIdMinWordLength" : 4,
          "minLower" : 8,
          "useIdentityAttributes" : false,
          "defaultPolicy" : true,
          "requireStrongAuthOffNetwork" : true,
          "name" : "PasswordPolicy Example",
          "maxLength" : 25
        }''' # PasswordPolicyV3Dto | 
        try:
            # Update Password Policy by ID
            new_password_policy_v3_dto = PasswordPolicyV3Dto.from_json(password_policy_v3_dto)
            results = PasswordPoliciesApi(api_client).set_password_policy(id=id, password_policy_v3_dto=new_password_policy_v3_dto)
            # Below is a request that includes all optional parameters
            # results = PasswordPoliciesApi(api_client).set_password_policy(id, new_password_policy_v3_dto)
            print("The response of PasswordPoliciesApi->set_password_policy:\n")
            pprint(results)
        except Exception as e:
            print("Exception when calling PasswordPoliciesApi->set_password_policy: %s\n" % e)
