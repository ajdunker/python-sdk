- path: /saved-searches
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/saved-search#create-saved-search
      source: |
        from sailpoint.v3.api.saved_search_api import SavedSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.create_saved_search_request import CreateSavedSearchRequest
        from sailpoint.v3.models.saved_search import SavedSearch
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          create_saved_search_request = '''sailpoint.v3.CreateSavedSearchRequest()''' # CreateSavedSearchRequest | The saved search to persist.
          try:
              # Create a saved search
              new_create_saved_search_request = CreateSavedSearchRequest.from_json(create_saved_search_request)
              results = SavedSearchApi(api_client).create_saved_search(create_saved_search_request=new_create_saved_search_request)
              # Below is a request that includes all optional parameters
              # results = SavedSearchApi(api_client).create_saved_search(new_create_saved_search_request)
              print("The response of SavedSearchApi->create_saved_search:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling SavedSearchApi->create_saved_search: %s\n" % e)
- path: /saved-searches/{id}
  method: DELETE
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/saved-search#delete-saved-search
      source: |
        from sailpoint.v3.api.saved_search_api import SavedSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          id = '2c91808568c529c60168cca6f90c1313' # str | ID of the requested document. # str | ID of the requested document.
          try:
              # Delete document by ID
              
              SavedSearchApi(api_client).delete_saved_search(id=id)
              # Below is a request that includes all optional parameters
              # SavedSearchApi(api_client).delete_saved_search(id)
          except Exception as e:
              print("Exception when calling SavedSearchApi->delete_saved_search: %s\n" % e)
- path: /saved-searches/{id}/execute
  method: POST
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/saved-search#execute-saved-search
      source: |
        from sailpoint.v3.api.saved_search_api import SavedSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.search_arguments import SearchArguments
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          id = '2c91808568c529c60168cca6f90c1313' # str | ID of the requested document. # str | ID of the requested document.
          search_arguments = '''{
          "owner" : "",
          "recipients" : [ {
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          }, {
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          } ],
          "scheduleId" : "7a724640-0c17-4ce9-a8c3-4a89738459c8"
        }''' # SearchArguments | When saved search execution is triggered by a scheduled search, *scheduleId* will specify the ID of the triggering scheduled search.  If *scheduleId* is not specified (when execution is triggered by a UI test), the *owner* and *recipients* arguments must be provided. 
          try:
              # Execute a saved search by ID
              new_search_arguments = SearchArguments.from_json(search_arguments)
              SavedSearchApi(api_client).execute_saved_search(id=id, search_arguments=new_search_arguments)
              # Below is a request that includes all optional parameters
              # SavedSearchApi(api_client).execute_saved_search(id, new_search_arguments)
          except Exception as e:
              print("Exception when calling SavedSearchApi->execute_saved_search: %s\n" % e)
- path: /saved-searches/{id}
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/saved-search#get-saved-search
      source: |
        from sailpoint.v3.api.saved_search_api import SavedSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.saved_search import SavedSearch
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          id = '2c91808568c529c60168cca6f90c1313' # str | ID of the requested document. # str | ID of the requested document.
          try:
              # Return saved search by ID
              
              results = SavedSearchApi(api_client).get_saved_search(id=id)
              # Below is a request that includes all optional parameters
              # results = SavedSearchApi(api_client).get_saved_search(id)
              print("The response of SavedSearchApi->get_saved_search:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling SavedSearchApi->get_saved_search: %s\n" % e)
- path: /saved-searches
  method: GET
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/saved-search#list-saved-searches
      source: |
        from sailpoint.v3.api.saved_search_api import SavedSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.saved_search import SavedSearch
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count = False # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False)
          filters = 'owner.id eq \"7a724640-0c17-4ce9-a8c3-4a89738459c8\"' # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **owner.id**: *eq* (optional) # str | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **owner.id**: *eq* (optional)
          try:
              # A list of Saved Searches
              
              results = SavedSearchApi(api_client).list_saved_searches()
              # Below is a request that includes all optional parameters
              # results = SavedSearchApi(api_client).list_saved_searches(offset, limit, count, filters)
              print("The response of SavedSearchApi->list_saved_searches:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling SavedSearchApi->list_saved_searches: %s\n" % e)
- path: /saved-searches/{id}
  method: PUT
  xCodeSample:
    - lang: Python
      label: SDK_tools/sdk/python/v3/methods/saved-search#put-saved-search
      source: |
        from sailpoint.v3.api.saved_search_api import SavedSearchApi
        from sailpoint.v3.api_client import ApiClient
        from sailpoint.v3.models.saved_search import SavedSearch
        from sailpoint.configuration import Configuration
        configuration = Configuration()


        with ApiClient(configuration) as api_client:
          id = '2c91808568c529c60168cca6f90c1313' # str | ID of the requested document. # str | ID of the requested document.
          saved_search = '''{
          "owner" : {
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "created" : "2018-06-25T20:22:28.104Z",
          "columns" : {
            "identity" : [ {
              "field" : "displayName",
              "header" : "Display Name"
            }, {
              "field" : "e-mail",
              "header" : "Work Email"
            } ]
          },
          "query" : "@accounts(disabled:true)",
          "description" : "Disabled accounts",
          "orderBy" : {
            "identity" : [ "lastName", "firstName" ],
            "role" : [ "name" ]
          },
          "sort" : [ "displayName" ],
          "filters" : {
            "terms" : [ "account_count", "account_count" ],
            "range" : {
              "lower" : {
                "inclusive" : false,
                "value" : "1"
              },
              "upper" : {
                "inclusive" : false,
                "value" : "1"
              }
            },
            "exclude" : false,
            "type" : "RANGE"
          },
          "ownerId" : "2c91808568c529c60168cca6f90c1313",
          "indices" : [ "identities" ],
          "public" : false,
          "name" : "Disabled accounts",
          "modified" : "2018-06-25T20:22:28.104Z",
          "id" : "0de46054-fe90-434a-b84e-c6b3359d0c64",
          "fields" : [ "disabled" ]
        }''' # SavedSearch | The saved search to persist.
          try:
              # Updates an existing saved search 
              new_saved_search = SavedSearch.from_json(saved_search)
              results = SavedSearchApi(api_client).put_saved_search(id=id, saved_search=new_saved_search)
              # Below is a request that includes all optional parameters
              # results = SavedSearchApi(api_client).put_saved_search(id, new_saved_search)
              print("The response of SavedSearchApi->put_saved_search:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
          except Exception as e:
              print("Exception when calling SavedSearchApi->put_saved_search: %s\n" % e)
