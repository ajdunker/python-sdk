# coding: utf-8

"""
    IdentityNow Beta API

    Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

    The version of the OpenAPI document: 3.1.0-beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest
import datetime

from beta.models.account_correlated import AccountCorrelated  # noqa: E501


class TestAccountCorrelated(unittest.TestCase):
    """AccountCorrelated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountCorrelated:
        """Test AccountCorrelated
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountCorrelated`
        """
        model = AccountCorrelated()  # noqa: E501
        if include_optional:
            return AccountCorrelated(
                identity = beta.models.account_correlated_identity.AccountCorrelated_identity(
                    type = IDENTITY, ),
                source = beta.models.account_correlated_source.AccountCorrelated_source(
                    id = '4e4d982dddff4267ab12f0f1e72b5a6d', 
                    type = 'SOURCE', 
                    name = 'Corporate Active Directory', ),
                account = beta.models.account_correlated_account.AccountCorrelated_account(
                    type = ACCOUNT, 
                    native_identity = 'cn=john.doe,ou=users,dc=acme,dc=com', 
                    uuid = '1cb1f07d-3e5a-4431-becd-234fa4306108', ),
                attributes = {sn=doe, givenName=john, memberOf=[cn=g1,ou=groups,dc=acme,dc=com, cn=g2,ou=groups,dc=acme,dc=com, cn=g3,ou=groups,dc=acme,dc=com]},
                entitlement_count = 0
            )
        else:
            return AccountCorrelated(
                identity = beta.models.account_correlated_identity.AccountCorrelated_identity(
                    type = IDENTITY, ),
                source = beta.models.account_correlated_source.AccountCorrelated_source(
                    id = '4e4d982dddff4267ab12f0f1e72b5a6d', 
                    type = 'SOURCE', 
                    name = 'Corporate Active Directory', ),
                account = beta.models.account_correlated_account.AccountCorrelated_account(
                    type = ACCOUNT, 
                    native_identity = 'cn=john.doe,ou=users,dc=acme,dc=com', 
                    uuid = '1cb1f07d-3e5a-4431-becd-234fa4306108', ),
                attributes = {sn=doe, givenName=john, memberOf=[cn=g1,ou=groups,dc=acme,dc=com, cn=g2,ou=groups,dc=acme,dc=com, cn=g3,ou=groups,dc=acme,dc=com]},
        )
        """

    def testAccountCorrelated(self):
        """Test AccountCorrelated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
